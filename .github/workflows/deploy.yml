name: Deploy to GCP

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: us-central1
  BACKEND_SERVICE: monopoly-deal-backend
  FRONTEND_SERVICE: monopoly-deal-frontend
  DATABASE_INSTANCE: monopoly-deal-db
  TAG_NAME: ${{ github.ref_name }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ vars.GCP_PROJECT_ID }}

    - name: Configure Docker for GCR
      run: gcloud auth configure-docker

    - name: Build and push backend Docker image
      run: |
        docker build -f docker/backend.Dockerfile -t gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$TAG_NAME .
        docker push gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$TAG_NAME

    - name: Deploy backend service to Cloud Run
      run: |
        # Create environment file with initial environment variables
        cat > /tmp/backend.env << EOF
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        FRONTEND_ORIGINS=https://monopolydeal.ai,https://www.monopolydeal.ai
        EOF

        gcloud run deploy $BACKEND_SERVICE \
          --image gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$TAG_NAME \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --env-vars-file /tmp/backend.env \
          --add-cloudsql-instances=monopoly-deal-agent:us-central1:monopoly-deal-db \
          --memory 1Gi \
          --cpu 1 \
          --max-instances 10

    - name: Get backend service URL for frontend build
      id: backend-url
      run: |
        BACKEND_URL=$(gcloud run services describe $BACKEND_SERVICE --region=$REGION --format="value(status.url)")
        echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT

    - name: Build and push frontend Docker image
      run: |
        # Get backend URL for build-time environment variable
        BACKEND_URL=${{ steps.backend-url.outputs.url }}
        docker build -f docker/frontend.Dockerfile --build-arg NEXT_PUBLIC_API_URL=$BACKEND_URL -t gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$TAG_NAME .
        docker push gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$TAG_NAME

    - name: Deploy frontend service to Cloud Run
      run: |
        gcloud run deploy $FRONTEND_SERVICE \
          --image gcr.io/$PROJECT_ID/$FRONTEND_SERVICE:$TAG_NAME \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --set-env-vars DEV=false \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 5

    - name: Update backend environment variables
      run: |
        # Get the newly deployed frontend URL
        FRONTEND_URL=$(gcloud run services describe $FRONTEND_SERVICE --region=$REGION --format="value(status.url)")

        echo "Updating backend environment variables: DATABASE_URL and FRONTEND_ORIGINS with $FRONTEND_URL, https://monopolydeal.ai, https://www.monopolydeal.ai"

        # Create environment file with all required environment variables
        cat > /tmp/cors.env << EOF
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        FRONTEND_ORIGINS=$FRONTEND_URL,https://monopolydeal.ai,https://www.monopolydeal.ai
        EOF

        # Update backend using the environment file
        gcloud run services update $BACKEND_SERVICE \
          --region=$REGION \
          --env-vars-file /tmp/cors.env


    - name: Run database migrations
      run: |
        # Delete existing job if it exists (ignore errors)
        gcloud run jobs delete db-migrations --region $REGION --quiet || true

        # Create new job
        gcloud run jobs create db-migrations \
          --image gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$TAG_NAME \
          --region $REGION \
          --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --set-cloudsql-instances=monopoly-deal-agent:us-central1:monopoly-deal-db \
          --command dbmate \
          --args up \
          --memory 512Mi \
          --cpu 1 \
          --max-retries 3 \
          --parallelism 1

    - name: Execute database migration job
      run: |
        gcloud run jobs execute db-migrations --region $REGION --wait

    - name: Create database seeding job
      run: |
        # Delete existing job if it exists (ignore errors)
        gcloud run jobs delete db-seeding --region $REGION --quiet || true

        # Create new job
        gcloud run jobs create db-seeding \
          --image gcr.io/$PROJECT_ID/$BACKEND_SERVICE:$TAG_NAME \
          --region $REGION \
          --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }} \
          --set-cloudsql-instances=monopoly-deal-agent:us-central1:monopoly-deal-db \
          --command python \
          --args db/seed_data.py \
          --memory 512Mi \
          --cpu 1 \
          --max-retries 3 \
          --parallelism 1

    - name: Execute database seeding job
      run: |
        gcloud run jobs execute db-seeding --region $REGION --wait

    - name: Get frontend service URL
      run: |
        FRONTEND_URL=$(gcloud run services describe $FRONTEND_SERVICE --region=$REGION --format="value(status.url)")
        echo "ðŸš€ Frontend deployed at: $FRONTEND_URL"
        echo "ðŸ”’ Backend deployed at: ${{ steps.backend-url.outputs.url }}"
